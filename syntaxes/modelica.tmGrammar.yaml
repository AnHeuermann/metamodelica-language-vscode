fileTypes:
  - mo
name: Modelica

patterns:
  # Comments
  - begin: /\*
    end: \*/
    name: comment.block
  - match: (//).*$\n?
    name: comment.line

  # Constants
  - match: \b(true|false)\b
    name: constant.language
  - match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b
    name: constant.numeric

  # Storage
  - match: \b(Real|Integer|Boolean|String|enumeration|type)\b
    name: storage.type
  - match: \b(constant|final|parameter|expandable|replaceable|redeclare|constrainedby|import|flow|stream|discrete|connector)\b
    name: storage.modifier

  # Keywords
  - match: \b\s*([a-zA-Z])(?:([^ ;,:=\($]+)(;)?)([.]([a-zA-Z])(?:([^ ;,:=\($]+)(;)?)?)++\b
    name: keyword
  - match: \b(for|if|when|while|then|loop|end if|end when|end for|end while|else|elsewhen|break|return|each|elseif|input|output)\b
    name: keyword.control
  - match: \b(and|or|not)\b
    name: keyword.control
  - match: <|<\=|>|>\=|\=\=|<>
    name: keyword.operator.comparison
  - match: \+|\-|\.\+|\.\-|\*|\.\*|/|\./|\^
    name: keyword.operator.arithmetic
  - match: \=|\:\=
    name: keyword.operator.assignment
  - match: \b(algorithm|equation|protected|public|end|external|in)\b
    name: keyword

  # Support
  - match: \b(acos|asin|atan|atan2|cos|cosh|exp|log|log10|sin|sinh|tan|tanh|abs|sign|sqrt|max|min|product|sum)\b
    name: support.function.mathematical
  - match: \b(scalar|vector|matrix|identity|diagonal|zeros|ones|fill|linspace|transpose|outerProduct|symmetric|cross|skew)\b
    name: support.function.array
  - match: \b(ceil|div|fill|floor|integer|max|min|mod|rem|pre|noEvent|change|edge|initial|terminal|reinit|sample|smooth|terminate)\b
    name: support.function.event
  - match: \b(connect|der|inStream|actualStream|semiLinear|spatialDistribution|getInstanceName|homotopy|delay|assert|ndims|size|cardinality|isPresent)\b
    name: support.function.special
  - match: \b(extends|partial|within)\b
    name: support.type

  # Class definitions
  - begin: \b(model|class|record|block|package|function)\s+(\w+)\s*((?<!\\)"([^"]|\\")*(?<!\\)")?
    beginCaptures:
      1:
        name: keyword
      2:
        name: entity.name.type
      3:
        name: comment.line
    end: \b(end)\s+(\2)\s*;
    endCaptures:
      1:
        name: keyword
      2:
        name: entity.name.type
    patterns:
      - include: "source.modelica"

  # Function calls
  - match: \b([\w|\.]+)\b\(
    name: entity.name.function

  # Annotations
  - begin: \b(annotation)\b
    beginCaptures:
      - name: keyword
    end: \)\s*;
    patterns:
      - include: '#annotations'

  # Documentation Strings
  - match: (?<![=+]\s*)((?<!\\)"([^"]|\\")*(?<!\\)")\s*;
    captures:
      1:
        name: comment.line

  # Strings
  - begin: \"
    end: \"
    name: string.quoted.double
    patterns:
      - include: '#escapes'

repository:
  escapes:
    match: '\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
    name: constant.character.escape

  annotations:
    patterns:
      - match: \b(Evaluate|version|versionDate|dateModified|HideResult|singleInstance|mustBeConnected|mayOnlyConnectOnce|Inline|LateInline)\b
        name: keyword
      - begin: \b(experiment)\b\s*\(
        beginCaptures:
          - name: keyword
        end: \)
        patterns:
          - include: '#experiment'
      - include: "source.modelica"

  experiment:
    patterns:
      - match: \b(StartTime|StopTime|Interval|Tolerance)\b
        name: keyword
      - include: "source.modelica"

scopeName: source.modelica

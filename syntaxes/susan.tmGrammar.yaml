fileTypes:
  - tpl
# firstLineMatch
name: Susan

patterns:
  # Comments
  - begin: /\*
    end: \*/
    name: comment.block
  - match: (//).*$\n?
    name: comment.line

  # Constants
  - match: \b(true|false)\b
    name: constant.language
  - match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b
    name: constant.numeric

  # Storage
  - match: \b(Real|Integer|Boolean|String|enumeration|type)\b
    name: storage.type
  - match: \b(constant|final|parameter|expandable|replaceable|redeclare|constrainedby|import|flow|stream|discrete|connector)\b
    name: storage.modifier
  - begin: \b(list<|Option<|tuple<)\b
    end: '>'
    name: storage.type
  - match: \b(uniontype)\s+(\w+)\s*(".*")*
    captures:
      1:
        name: keyword
      2:
        name: entity.name.type
      3:
        name: string.quoted.double

  # Keywords
  - match: ::=|\|\>|=\>
    name: keyword.control
  - match: \=|\+\=
    name: keyword.operator.assignment
  - match: \b(hasindex|separator|as)\b
    name: keyword.control
  - match: \b(match|case|then|end match)\b
    name: keyword.control

  # Storage
  - match: Text&|\b(Text)\b
    name: storage.type
  - match: \b(interface)\b
    name: storage.modifier

  # Block definitions
  - match: (\b(template)\b\s+\w+\s*(".*")*)
    captures:
      1:
        name: entity.name.function
      2:
        name: keyword
      3:
        name: comment.line
  - match: \b(end)\b(\s+\w+\s*);
    captures:
      1:
        name: keyword
      2:
        name: entity.name.function

  # Function calls
  - match: \b(package)\s+(\w+)\s*(".*")*
    captures:
      1:
        name: keyword
      2:
        name: entity.name.type
      3:
        name: string.quoted.double
  - match: \b(\w+)\b\([\w]+[,\s*\w+]*\)
    captures:
      1:
        name: entity.name.function

  # Variable definitions
  - begin: \b(let )
    beginCaptures:
      - name: keyword
    end: \+=|=
    endCaptures:
      - name: keyword.operator.assignment
    contentName: entity.name.type

  - include: '#strings'

repository:
  strings:
    patterns:
      - begin: '<<'
        end: '>>'
        captures:
          - name: keyword
        name: string.interpolated
        patterns:
          - include: '#escapes'
          - include: '#interpolation'
      - begin: \'
        end: \'
        name: string.interpolated
        patterns:
          - include: '#escapes'
          - include: '#interpolation'
      - begin: \"
        end: \"
        name: string.interpolated
        patterns:
          - include: '#escapes'
          - include: '#interpolation'

  interpolation:
    begin: '<%'
    beginCaptures:
      0:
        - name: keyword
    end: '(%>)'
    endCaptures:
      0:
        - name: keyword
      1:
        - name: source.susan
    contentName: source.susan
    name: meta.embedded
    patterns:
      - include: $self

  escapes:
    match: '\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
    name: constant.character.escape

scopeName: source.susan

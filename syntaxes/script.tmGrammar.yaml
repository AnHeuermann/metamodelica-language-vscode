fileTypes:
  - mos
name: OpenModelica-Script

patterns:
  # Comments
  - begin: /\*
    end: \*/
    name: comment.block
  - match: (//).*$\n?
    name: comment.line

  - match: \b(\w+)\b\([\w]+[,\s*\w+]*\)
    captures:
      1:
        name: entity.name.function

  - include: '#stringModelicaInput'

repository:
  stringModelicaInput:
    patterns:
      - begin: \"
        end: \"
        name: string.quoted.double

      - begin: '(loadString)\((\")'
        beginCapture:
          0:
            - name: entity.name.function
          1:
            - name: string.quoted.double
        end: '(\")\);'
        endCaptures:
          0:
            - name: string.quoted.double
        patterns:
          - include: '#modelica'

  modelica:
    patterns:
      # Comments
      - begin: /\*
        end: \*/
        name: comment.block
      - match: (//).*$\n?
        name: comment.line

      # Constants
      - match: \b(true|false)\b
        name: constant.language
      - match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b
        name: constant.numeric

      # Storage
      - match: \b(Real|Integer|Boolean|String|enumeration|type)\b
        name: storage.type
      - match: \b(constant|final|parameter|expandable|replaceable|redeclare|constrainedby|import|flow|stream|discrete|connector)\b
        name: storage.modifier
      
      # Keywords
      - match: \b\s*([a-zA-Z])(?:([^ ;,:=\($]+)(;)?)([.]([a-zA-Z])(?:([^ ;,:=\($]+)(;)?)?)++\b
        name: keyword
      - match: \b(for|if|when|while|then|loop|end if|end when|end for|end while|else|elsewhen|and|break|return|each|elseif|input|output)\b
        name: keyword.control
      - match: \b(and|or|not)\b
        name: keyword.operator.logical
      - match: <|<\=|>|>\=|\=\=|<>
        name: keyword.operator.comparison
      - match: \+|\-|\.\+|\.\-|\*|\.\*|/|\./|\^
        name: keyword.operator.arithmetic
      - match: \=|\:\=
        name: keyword.operator.assignment
      - match: \b(algorithm|equation|initial algorithm|initial equation|protected|public|end|pure|impure|external|encapsulated|in|inner|operator|outer)\b
        name: keyword

      # Support
      - match: \b(acos|asin|atan|atan2|cos|cosh|exp|log|log10|sin|sinh|tan|tanh|abs|sign|sqrt|max|min|product|sum)\b
        name: support.function.mathematical
      - match: \b(scalar|vector|matrix|identity|diagonal|zeros|ones|fill|linspace|transpose|outerProduct|symmetric|cross|skew)\b
        name: support.function.array
      - match: \b(ceil|div|fill|floor|integer|max|min|mod|rem|pre|noEvent|change|edge|initial|terminal|reinit|sample|smooth|terminate)\b
        name: support.function.event
      - match: \b(connect|der|inStream|actualStream|semiLinear|spatialDistribution|getInstanceName|homotopy|delay|assert|ndims|size|cardinality|isPresent)\b
        name: support.function.special
      - match: \b(extends|partial|within)\b
        name: support.type

      # Block definitions
      - match: \b(model|class|record|block|package)\s+(\w+)\s*(".*")*
        captures:
          1:
            name: keyword
          2:
            name: entity.name.type
          3:
            name: string.quoted.double
      - match: ((function)\s+\w+\s*(".*")*)
        captures:
          1:
            name: entity.name.function
          2:
            name: keyword
          3:
            name: comment.line

      # Strings
      - begin: '\\"'
        end: '\\"'
        name: string.quoted.double
        patterns:
          - match: \\.
            name: constant.character.escaped
      - match: '["\w\)\]](\s+".*"\s*);'
        captures:
          1:
            name: string.quoted.double

scopeName: source.openmodelica-script
